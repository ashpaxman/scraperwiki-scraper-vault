from BeautifulSoup import BeautifulSoup
import requests
import scraperwiki

def list_states():
    state_list = {}
    r = requests.get('http://www.hydraulicfracturingdisclosure.org/fracfocusfind/Default.aspx')
    soup = BeautifulSoup(r.content)
    update_panel = soup.find(id='MainContent_DocumentFilter1_UpdatePanel1')
    states = update_panel.find('select', {'name': 'ctl00$MainContent$DocumentFilter1$cboStateList'})
    state_options = states.findAll('option')
    for option in state_options:
        state_list[option['value']] = option.text
    return state_list

states = list_states()
wells = {}

for state_id in states:
    has_next_page = True
    current_page = 1
    while has_next_page:
        # FIXME: This doesn't work due to ASP.NET event validation (essentially an anti-scraping countermeasure). I've got some ideas for how to get around this, but it essentially involves controlling an actual full browser instance (Firefox, etc.) instead of something simpler such as Mechanize. (It has to be able to run JavaScript, which is the problem.)
        post_params = {
            "ctl00%24MainContent%24ScriptManager1": "ctl00%24MainContent%24DocumentFilter1%24UpdatePanel1%7Cctl00%24MainContent%24DocumentFilter1%24btnSearch",
            "ctl00%24MainContent%24DocumentFilter1%24cboStateList": state_id,
            "ctl00%24MainContent%24DocumentFilter1%24cboCountyList": "Choose%20a%20County",
            "ctl00%24MainContent%24DocumentFilter1%24cboWellNameList": "Choose%20a%20County%20First",
            "ctl00%24MainContent%24DocumentFilter1%24cboOperator": "Choose%20One",
            "ctl00%24MainContent%24DocumentFilter1%24tbAPINo": "__-___-_____",
            "ctl00%24MainContent%24DocumentFilter1%24tbAPINo_MaskedEditExtender_ClientState": "",
            "ctl00%24MainContent%24DocumentFilter1%24tbWellName": "",
            "ctl00%24MainContent%24DocumentList1%24GridView1%24ctl01%24PageCurrent": str(current_page),
            "ctl00%24MainContent%24DocumentList1%24GridView1%24ctl24%24PageCurrent": str(current_page),
            "__EVENTTARGET": "",
            "__EVENTARGUMENT": "",
            "__LASTFOCUS": "",
            "__VIEWSTATE": "%2FwEPDwUKLTEwNDYzMjIxOA9kFgJmD2QWBAIBD2QWBgIGDxYCHgRUZXh0BUY8bGluayByZWw9InNob3J0Y3V0IGljb24iIGhyZWY9Imh0dHA6Ly93d3cuZnJhY2ZvY3VzLm9yZy9mYXZpY29uLmljbyI%2BZAIHDxYCHwAFUjxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbiIgaHJlZj0iaHR0cDovL3d3dy5mcmFjZm9jdXMub3JnL2FwcGxlLXRvdWNoLWljb24ucG5nIj5kAggPFgIfAAVKPGxpbmsgcmVsPSJjYW5vbmljYWwiIGhyZWY9Imh0dHA6Ly93d3cuZnJhY2ZvY3VzLm9yZy9maW5kLXdlbGwtc3RhdGUtbWFwIj5kAgMPZBYeAgEPDxYCHgtOYXZpZ2F0ZVVybAUZaHR0cDovL3d3dy5mcmFjZm9jdXMub3JnL2RkAgMPDxYCHwEFIGh0dHA6Ly93d3cuZnJhY2ZvY3VzLm9yZy93ZWxjb21lZGQCBQ8PFgIfAQUlaHR0cDovL3d3dy5mcmFjZm9jdXMub3JnL3B1YmxpY2F0aW9uc2RkAgcPDxYCHwEFJWh0dHA6Ly93d3cuZnJhY2ZvY3VzLm9yZy9uZXdzLXVwZGF0ZXNkZAIJDw8WAh8BBR5odHRwOi8vd3d3LmZyYWNmb2N1cy5vcmcvbGlua3NkZAILDw8WAh8BBRhodHRwOi8vd3d3LmZyYWNmb2N1cy5vcmdkZAINDxYCHwAFezxhIGlkPSJtZW51LWZyYWN0dXJpbmciIGhyZWY9Imh0dHA6Ly93d3cuZnJhY2ZvY3VzLm9yZy9oeWRyYXVsaWMtZnJhY3R1cmluZy1wcm9jZXNzIj5IeWRyYXVsaWMgRnJhY3R1cmluZzogSG93IGl0IFdvcmtzPC9hPmQCDw8WAh8ABXU8YSBpZD0ibWVudS1ncm91bmR3YXRlci1wcm90ZWN0aW9uIiBocmVmPSJodHRwOi8vd3d3LmZyYWNmb2N1cy5vcmcvZ3JvdW5kd2F0ZXItcHJvdGVjdGlvbiI%2BR3JvdW5kd2F0ZXIgUHJvdGVjdGlvbjwvYT5kAhEPFgIfAAWAATxhIGlkPSJtZW51LWdsb3NzYXJ5IiB0aXRsZT0iQ2hlbWljYWwgVXNlIiBocmVmPSJodHRwOi8vd3d3LmZyYWNmb2N1cy5vcmcvY2hlbWljYWwtdXNlIj5DaGVtaWNhbCBVc2UgaW4gSHlkcmF1bGljIEZyYWN0dXJpbmc8L2E%2BZAITDxYCHwAFYzxhIGlkPSJtZW51LXJlZ3VsYXRpb25zIiBocmVmPSJodHRwOi8vd3d3LmZyYWNmb2N1cy5vcmcvcmVndWxhdGlvbnMtc3RhdGUiPlJlZ3VsYXRpb25zIEJ5IFN0YXRlPC9hPmQCFQ8WAh8ABVM8YSBpZD0ibWVudS1mYXEiIGhyZWY9Imh0dHA6Ly93d3cuZnJhY2ZvY3VzLm9yZy9mYXEiPkZyZXF1ZW50bHkgQXNrZWQgUXVlc3Rpb25zPC9hPmQCGQ9kFgYCAw9kFgJmD2QWAgIBD2QWBAICD2QWAmYPZBYMAgMPEA8WAh4LXyFEYXRhQm91bmRnZA8WMwIBAgICAwIEAgUCBgIHAggCCQIKAgsCDAINAg4CDwIQAhECEgITAhQCFQIWAhcCGAIZAhoCGwIcAh0CHgIfAiACIQIiAiMCJAIlAiYCJwIoAikCKgIrAiwCLQIuAi8CMAIxAjICMxYzEAUHQWxhYmFtYQUBMWcQBQZBbGFza2EFAjUwZxAFB0FyaXpvbmEFATJnEAUIQXJrYW5zYXMFATNnEAUKQ2FsaWZvcm5pYQUBNGcQBQhDb2xvcmFkbwUBNWcQBQtDb25uZWN0aWN1dAUBNmcQBQhEZWxhd2FyZQUBN2cQBRREaXN0cmljdCBvZiBDb2x1bWJpYQUBOGcQBQdGbG9yaWRhBQE5ZxAFB0dlb3JnaWEFAjEwZxAFBkhhd2FpaQUCNTFnEAUFSWRhaG8FAjExZxAFCElsbGlub2lzBQIxMmcQBQdJbmRpYW5hBQIxM2cQBQRJb3dhBQIxNGcQBQZLYW5zYXMFAjE1ZxAFCEtlbnR1Y2t5BQIxNmcQBQlMb3Vpc2lhbmEFAjE3ZxAFBU1haW5lBQIxOGcQBQhNYXJ5bGFuZAUCMTlnEAUNTWFzc2FjaHVzZXR0cwUCMjBnEAUITWljaGlnYW4FAjIxZxAFCU1pbm5lc290YQUCMjJnEAULTWlzc2lzc2lwcGkFAjIzZxAFCE1pc3NvdXJpBQIyNGcQBQdNb250YW5hBQIyNWcQBQhOZWJyYXNrYQUCMjZnEAUGTmV2YWRhBQIyN2cQBQ1OZXcgSGFtcHNoaXJlBQIyOGcQBQpOZXcgSmVyc2V5BQIyOWcQBQpOZXcgTWV4aWNvBQIzMGcQBQhOZXcgWW9yawUCMzFnEAUOTm9ydGggQ2Fyb2xpbmEFAjMyZxAFDE5vcnRoIERha290YQUCMzNnEAUET2hpbwUCMzRnEAUIT2tsYWhvbWEFAjM1ZxAFBk9yZWdvbgUCMzZnEAUMUGVubnN5bHZhbmlhBQIzN2cQBQxSaG9kZSBJc2xhbmQFAjM4ZxAFDlNvdXRoIENhcm9saW5hBQIzOWcQBQxTb3V0aCBEYWtvdGEFAjQwZxAFCVRlbm5lc3NlZQUCNDFnEAUFVGV4YXMFAjQyZxAFBFV0YWgFAjQzZxAFB1Zlcm1vbnQFAjQ0ZxAFCFZpcmdpbmlhBQI0NWcQBQpXYXNoaW5ndG9uBQI0NmcQBQ1XZXN0IFZpcmdpbmlhBQI0N2cQBQlXaXNjb25zaW4FAjQ4ZxAFB1d5b21pbmcFAjQ5ZxYBAgFkAgUPEA8WAh8CZ2QQFUYPQ2hvb3NlIGEgQ291bnR5B0F1dGF1Z2EHQmFsZHdpbgdCYXJib3VyBEJpYmIGQmxvdW50B0J1bGxvY2sGQnV0bGVyB0NhbGhvdW4IQ2hhbWJlcnMIQ2hlcm9rZWUHQ2hpbHRvbgdDaG9jdGF3BkNsYXJrZQRDbGF5CENsZWJ1cm5lBkNvZmZlZQdDb2xiZXJ0B0NvbmVjdWgFQ29vc2EJQ292aW5ndG9uCENyZW5zaGF3B0N1bGxtYW4ERGFsZQZEYWxsYXMHRGUgS2FsYgZFbG1vcmUIRXNjYW1iaWEGRXRvd2FoB0ZheWV0dGUIRnJhbmtsaW4GR2VuZXZhBkdyZWVuZQRIYWxlBUhlbnJ5B0hvdXN0b24HSmFja3NvbglKZWZmZXJzb24FTGFtYXIKTGF1ZGVyZGFsZQhMYXdyZW5jZQNMZWUJTGltZXN0b25lB0xvd25kZXMFTWFjb24HTWFkaXNvbgdNYXJlbmdvBk1hcmlvbghNYXJzaGFsbAZNb2JpbGUGTW9ucm9lCk1vbnRnb21lcnkGTW9yZ2FuBVBlcnJ5B1BpY2tlbnMEUGlrZQhSYW5kb2xwaAdSdXNzZWxsCVN0LiBDbGFpcgZTaGVsYnkGU3VtdGVyCVRhbGxhZGVnYQpUYWxsYXBvb3NhClR1c2NhbG9vc2EGV2Fsa2VyCldhc2hpbmd0b24GV2lsY294B1dpbnN0b24dU3RhdGUgV2F0ZXJzIC0gQmFsZHdpbiBDb3VudHkcU3RhdGUgV2F0ZXJzIC0gTW9iaWxlIENvdW50eRVGD0Nob29zZSBhIENvdW50eQExATMBNQE3ATkCMTECMTMCMTUCMTcCMTkCMjECMjMCMjUCMjcCMjkCMzECMzMCMzUCMzcCMzkCNDECNDMCNDUCNDcCNDkCNTECNTMCNTUCNTcCNTkCNjECNjMCNjUCNjcCNjkCNzECNzMCNzUCNzcCNzkCODECODMCODUCODcCODkCOTECOTMCOTUCOTcCOTkDMTAxAzEwMwMxMDUDMTA3AzEwOQMxMTEDMTEzAzExNQMxMTcDMTE5AzEyMQMxMjMDMTI1AzEyNwMxMjkDMTMxAzEzMwMyMDMDMjk3FCsDRmdnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2cWAWZkAgcPEGQQFQEVQ2hvb3NlIGEgQ291bnR5IEZpcnN0FQEVQ2hvb3NlIGEgQ291bnR5IEZpcnN0FCsDAWdkZAIJDxAPFgIfAmdkDxZYAgECAgIDAgQCBQIGAgcCCAIJAgoCCwIMAg0CDgIPAhACEQISAhMCFAIVAhYCFwIYAhkCGgIbAhwCHQIeAh8CIAIhAiICIwIkAiUCJgInAigCKQIqAisCLAItAi4CLwIwAjECMgIzAjQCNQI2AjcCOAI5AjoCOwI8Aj0CPgI%%2BY3RsMDAkTWFpbkNvbnRlbnQkRG9jdW1lbnRGaWx0ZXIxJFJlcGVhdGVyMiRjdGwwNCRJbWFnZUJ1dHRvbjEFPmN0bDAwJE1haW5Db250ZW50JERvY3VtZW50RmlsdGVyMSRSZXBlYXRlcjIkY3RsMDYkSW1hZ2VCdXR0b24xBT5jdGwwMCRNYWluQ29udGVudCREb2N1bWVudEZpbHRlcjEkUmVwZWF0ZXIyJGN0bDA4JEltYWdlQnV0dG9uMQU1Y3RsMDAkTWFpbkNvbnRlbnQkRG9jdW1lbnRMaXN0MSRHcmlkVmlldzEkY3RsMDMkY3RsMDAFNWN0bDAwJE1haW5Db250ZW50JERvY3VtZW50TGlzdDEkR3JpZFZpZXcxJGN0bDA0JGN0bDAwBTVjdGwwMCRNYWluQ29udGVudCREb2N1bWVudExpc3QxJEdyaWRWaWV3MSRjdGwwNSRjdGwwMAU1Y3RsMDAkTWFpbkNvbnRlbnQkRG9jdW1lbnRMaXN0MSRHcmlkVmlldzEkY3RsMDYkY3RsMDAFNWN0bDAwJE1haW5Db250ZW50JERvY3VtZW50TGlzdDEkR3JpZFZpZXcxJGN0bDA3JGN0bDAwBTVjdGwwMCRNYWluQ29udGVudCREb2N1bWVudExpc3QxJEdyaWRWaWV3MSRjdGwwOCRjdGwwMAU1Y3RsMDAkTWFpbkNvbnRlbnQkRG9jdW1lbnRMaXN0MSRHcmlkVmlldzEkY3RsMDkkY3RsMDAFNWN0bDAwJE1haW5Db250ZW50JERvY3VtZW50TGlzdDEkR3JpZFZpZXcxJGN0bDEwJGN0bDAwBTVjdGwwMCRNYWluQ29udGVudCREb2N1bWVudExpc3QxJEdyaWRWaWV3MSRjdGwxMSRjdGwwMAU1Y3RsMDAkTWFpbkNvbnRlbnQkRG9jdW1lbnRMaXN0MSRHcmlkVmlldzEkY3RsMTIkY3RsMDAFNWN0bDAwJE1haW5Db250ZW50JERvY3VtZW50TGlzdDEkR3JpZFZpZXcxJGN0bDEzJGN0bDAwBTVjdGwwMCRNYWluQ29udGVudCREb2N1bWVudExpc3QxJEdyaWRWaWV3MSRjdGwxNCRjdGwwMAU1Y3RsMDAkTWFpbkNvbnRlbnQkRG9jdW1lbnRMaXN0MSRHcmlkVmlldzEkY3RsMTUkY3RsMDAFNWN0bDAwJE1haW5Db250ZW50JERvY3VtZW50TGlzdDEkR3JpZFZpZXcxJGN0bDE2JGN0bDAwBTVjdGwwMCRNYWluQ29udGVudCREb2N1bWVudExpc3QxJEdyaWRWaWV3MSRjdGwxNyRjdGwwMAU1Y3RsMDAkTWFpbkNvbnRlbnQkRG9jdW1lbnRMaXN0MSRHcmlkVmlldzEkY3RsMTgkY3RsMDAFNWN0bDAwJE1haW5Db250ZW50JERvY3VtZW50TGlzdDEkR3JpZFZpZXcxJGN0bDE5JGN0bDAwBTVjdGwwMCRNYWluQ29udGVudCREb2N1bWVudExpc3QxJEdyaWRWaWV3MSRjdGwyMCRjdGwwMAU1Y3RsMDAkTWFpbkNvbnRlbnQkRG9jdW1lbnRMaXN0MSRHcmlkVmlldzEkY3RsMjEkY3RsMDAFNWN0bDAwJE1haW5Db250ZW50JERvY3VtZW50TGlzdDEkR3JpZFZpZXcxJGN0bDIyJGN0bDAwBSljdGwwMCRNYWluQ29udGVudCREb2N1bWVudExpc3QxJEdyaWRWaWV3MQ88KwAMAQgCA2TQ8dhHeZV%2FmbYNMKcZxBSx5TzLFDFU4%2BaSVxkCp2KA3A%3D%3D",
            "__EVENTVALIDATION": "%2FwEWhwIC5YXKrQoC0JjHowYCobrd6g0C3%2FftzQoC2%2FetzgoC3vftzQoC3fftzQoC3PftzQoC2%2FftzQoC2vftzQoC2fftzQoCyPftzQoCx%2FftzQoC3%2FetzgoC2%2FehzgoC3%2FehzgoC3%2FelzgoC3%2FeZzgoC3%2FedzgoC3%2FeRzgoC3%2FeVzgoC3%2FeJzgoC3%2FfNzQoC3%2FfBzQoC3vetzgoC3vehzgoC3velzgoC3veZzgoC3vedzgoC3veRzgoC3veVzgoC3veJzgoC3vfNzQoC3vfBzQoC3fetzgoC3fehzgoC3felzgoC3feZzgoC3fedzgoC3feRzgoC3feVzgoC3feJzgoC3ffNzQoC3ffBzQoC3PetzgoC3PehzgoC3PelzgoC3PeZzgoC3PedzgoC3PeRzgoC3PeVzgoC3PeJzgoC3PfNzQoC3PfBzQoC84KNpA8Cpq2orwwC%2FO2nygMC%2Fu2nygMC%2BO2nygMC%2Bu2nygMC5O2nygMC%2FO3ryQMC%2FO3TyQMC%2FO3byQMC%2FO3DyQMC%2FO2LygMC%2Fe3ryQMC%2Fe3TyQMC%2Fe3byQMC%2Fe3DyQMC%2Fe2LygMC%2Fu3ryQMC%2Fu3TyQMC%2Fu3byQMC%2Fu3DyQMC%2Fu2LygMC%2F%2B3ryQMC%2F%2B3TyQMC%2F%2B3byQMC%2F%2B3DyQMC%2F%2B2LygMC%2BO3ryQMC%2BO3TyQMC%2BO3byQMC%2BO3DyQMC%2BO2LygMC%2Be3ryQMC%2Be3TyQMC%2Be3byQMC%2Be3DyQMC%2Be2LygMC%2Bu3ryQMC%2Bu3TyQMC%2Bu3byQMC%2Bu3DyQMC%2Bu2LygMC6%2B3ryQMC6%2B3TyQMC6%2B3byQMC6%2B3DyQMC6%2B2LygMC5O3ryQMC5O3TyQMC5O3byQMC5O3DyQMC5O2LygMCt5Wm6woCievr3QYCw76vgAEClYzT6g0Cn8%2BxgQsCt5Wq6woCievv3QYCw76TgAEClYzX6g0Cn8%2B1gQsCt5Wu6woCievT3QYCw76XgAEClYzb6g0Cn8%2B5gQsCt5WS6woCievX3QYCiuvr3QYCloz36g0C%2BpWd%2FQoCi5TX2gcChd%2BXhAoCga%2BovAwC3I%2FkVwKmv%2FPNAwL9i6ihCgKw%2F9zPAQK4ps%2F6BQLa5vzXBAKMjpDvBgK9vqWOCQKO6PrpDgLXuPD9DwLsnOaNAgKGx4mEBAKezZnzDwKb7rDmBwLIuqygAQLvgoS%2BCgKX%2Be%2BMBgLAkYqXBALgyviNBQKHg4fKAQL53NLSBgLf4NLsDgKNvJvLBwKZ2euLCALl36ubBgKk2%2BnxBQKhnI6ZCgLCyejOBwKFz9%2BzDwKyl%2BOLBwLG4ay0BALT0qnBDwL%2B39uPBwK3kbuQCQK7rejVBAKe84zQBgL2vPbmCwKhtbuUBAKOxs%2BWCgKM49bWDgKf0odhArnb7MAEAvmyk9MLAqePzqEKAv7n%2FZsGAuiooJoLAtnFyy8CtKjq%2FQMCqYvkgQ0C2oD%2B4AECoOuBwwsCp5q5vwgCqOzo9w8CnM6%2B%2FwsC6c3W%2BwYC38fguQ8Cx4%2Ba6AkCmonKog8CjbffjQ4C%2F8ivpQYCqMm08QUCi8%2BcoQcCjOTq4w0CiduFrgsCicmh9AIC4dec8AECh9iY0AgC89OZ7gwCvKHYig8C8OyFsQ0CoNfgggkCgPThtQcC0aCAnQQC2fz0nQgC%2FYCEhgEC0tjt%2FAgC9rLIzAwC04%2BbEQKB35bkCgKvpNspAoKljesJAr3Yi2YCuZPo8QYCu%2FmswA8CxK7Osw4C7dn0WAKPkPXvCgKbheP5BgLF0MLVDgK81YG1CgKuvswwAqbEw6sPAprd7Y4MAuDMgpIMAsb25I4MAtzr%2BZEMApKbg5IMAqHr3ZgFApPH68wBAp%2Bxl4YBArHTlNwFApLpurIFAuPWkvMMAteXm8IOAqnCq%2B8HAsrb2IgPArKXzrELAqr0%2F54OAt7F6PoBAuD214cNAsLVlvoHApi5mhACmLmeEAKYuZIQApi5lhACmLmqEAKYua4QApi5ohACmLmmEAKYufoQApi5%2FhACyc75swkCrLfbyA4C%2F%2Fy1iQ0C4uWXngMCtanw3gECmJLS8wcC69estAYCzsCOyQsCoYTniQoChO3KHgLH6tTnDwLOrcavBQKFx9aGByZY9owtbkVjpJQyrX6y62LEkQ7KhB0kpORl7FA1H%2BLp",
            "__ASYNCPOST": "true",
            "ctl00%24MainContent%24DocumentFilter1%24btnSearch": "SEARCH"
        }
        r = requests.post('http://www.hydraulicfracturingdisclosure.org/fracfocusfind/Default.aspx', post_params)
        soup = BeautifulSoup(r.content)
        has_next_page = False  # FIXME: This is just here until I actually check for a next page to avoid accidental infinite loops.