#This is the first pass at a scraper of Excel files. 
#Currently it scrapes the first sheet of one spreadsheet, identified by URL
#NEED TO ADD: 
#All sheets - keys grabbed from header row
#More than one spreadsheet, linked from one URL

#useful guides at:
#https://scraperwiki.com/docs/python/python_excel_guide/
#http://blog.scraperwiki.com/2011/09/14/scraping-guides-excel-spreadsheets/
#https://scraperwiki.com/docs/python/tutorials/

#import scraperwiki library 
import scraperwiki

#import xlrd library - documentation at https://secure.simplistix.co.uk/svn/xlrd/trunk/xlrd/doc/xlrd.html
import xlrd

URL = 'http://transparency.dh.gov.uk/2012/10/26/winter-pressures-daily-situation-reports-2012-13/'

#set a variable for the spreadsheet location
XLS = 'http://webarchive.nationalarchives.gov.uk/20130402145952/http://transparency.dh.gov.uk/files/2012/10/DailySR-Web-file-WE-28-02-13.xls'

#use the scrape function on that spreadsheet to create a new variable
xlbin = scraperwiki.scrape(XLS)
#use the open_workbook function on that new variable to create another
book = xlrd.open_workbook(file_contents=xlbin)

#use the sheet_by_index method to open the first (0) sheet in variable 'book' - and put it into new variable 'sheet'
sheet = book.sheet_by_index(0)

#use the row_values method and index (1) to grab the second row of 'sheet', and put all cells into the list variable 'title'
title = sheet.row_values(1)
#print the string "Title:", followed by the third item (column) in the variable 'title' 
print "Title:", title[2]

#put cells from the 15th row into 'keys' variable 
keys = sheet.row_values(14)
record = {}

#loop through a range - from the 16th item (15) to a number generated by using the .nrows method on 'sheet' (to find number of rows in that sheet)
#put each row number in 'rownumber' as you loop
for rownumber in range(15, sheet.nrows):
    print rownumber
    record['SHA'] = keys
    record['Code'] = sheet.row_values(rownumber)[2]
    record['Name'] = sheet.row_values(rownumber)[3]
    record['date1'] = sheet.row_values(rownumber)[4]
    record['date2'] = sheet.row_values(rownumber)[5]
    record['date3'] = sheet.row_values(rownumber)[6]
    record['title'] = title[2]
    print "---", record
    scraperwiki.datastore.save(["Name"], record)
    

#This is the first pass at a scraper of Excel files. 
#Currently it scrapes the first sheet of one spreadsheet, identified by URL
#NEED TO ADD: 
#All sheets - keys grabbed from header row
#More than one spreadsheet, linked from one URL

#useful guides at:
#https://scraperwiki.com/docs/python/python_excel_guide/
#http://blog.scraperwiki.com/2011/09/14/scraping-guides-excel-spreadsheets/
#https://scraperwiki.com/docs/python/tutorials/

#import scraperwiki library 
import scraperwiki

#import xlrd library - documentation at https://secure.simplistix.co.uk/svn/xlrd/trunk/xlrd/doc/xlrd.html
import xlrd

URL = 'http://transparency.dh.gov.uk/2012/10/26/winter-pressures-daily-situation-reports-2012-13/'

#set a variable for the spreadsheet location
XLS = 'http://webarchive.nationalarchives.gov.uk/20130402145952/http://transparency.dh.gov.uk/files/2012/10/DailySR-Web-file-WE-28-02-13.xls'

#use the scrape function on that spreadsheet to create a new variable
xlbin = scraperwiki.scrape(XLS)
#use the open_workbook function on that new variable to create another
book = xlrd.open_workbook(file_contents=xlbin)

#use the sheet_by_index method to open the first (0) sheet in variable 'book' - and put it into new variable 'sheet'
sheet = book.sheet_by_index(0)

#use the row_values method and index (1) to grab the second row of 'sheet', and put all cells into the list variable 'title'
title = sheet.row_values(1)
#print the string "Title:", followed by the third item (column) in the variable 'title' 
print "Title:", title[2]

#put cells from the 15th row into 'keys' variable 
keys = sheet.row_values(14)
record = {}

#loop through a range - from the 16th item (15) to a number generated by using the .nrows method on 'sheet' (to find number of rows in that sheet)
#put each row number in 'rownumber' as you loop
for rownumber in range(15, sheet.nrows):
    print rownumber
    record['SHA'] = keys
    record['Code'] = sheet.row_values(rownumber)[2]
    record['Name'] = sheet.row_values(rownumber)[3]
    record['date1'] = sheet.row_values(rownumber)[4]
    record['date2'] = sheet.row_values(rownumber)[5]
    record['date3'] = sheet.row_values(rownumber)[6]
    record['title'] = title[2]
    print "---", record
    scraperwiki.datastore.save(["Name"], record)
    

#This is the first pass at a scraper of Excel files. 
#Currently it scrapes the first sheet of one spreadsheet, identified by URL
#NEED TO ADD: 
#All sheets - keys grabbed from header row
#More than one spreadsheet, linked from one URL

#useful guides at:
#https://scraperwiki.com/docs/python/python_excel_guide/
#http://blog.scraperwiki.com/2011/09/14/scraping-guides-excel-spreadsheets/
#https://scraperwiki.com/docs/python/tutorials/

#import scraperwiki library 
import scraperwiki

#import xlrd library - documentation at https://secure.simplistix.co.uk/svn/xlrd/trunk/xlrd/doc/xlrd.html
import xlrd

URL = 'http://transparency.dh.gov.uk/2012/10/26/winter-pressures-daily-situation-reports-2012-13/'

#set a variable for the spreadsheet location
XLS = 'http://webarchive.nationalarchives.gov.uk/20130402145952/http://transparency.dh.gov.uk/files/2012/10/DailySR-Web-file-WE-28-02-13.xls'

#use the scrape function on that spreadsheet to create a new variable
xlbin = scraperwiki.scrape(XLS)
#use the open_workbook function on that new variable to create another
book = xlrd.open_workbook(file_contents=xlbin)

#use the sheet_by_index method to open the first (0) sheet in variable 'book' - and put it into new variable 'sheet'
sheet = book.sheet_by_index(0)

#use the row_values method and index (1) to grab the second row of 'sheet', and put all cells into the list variable 'title'
title = sheet.row_values(1)
#print the string "Title:", followed by the third item (column) in the variable 'title' 
print "Title:", title[2]

#put cells from the 15th row into 'keys' variable 
keys = sheet.row_values(14)
record = {}

#loop through a range - from the 16th item (15) to a number generated by using the .nrows method on 'sheet' (to find number of rows in that sheet)
#put each row number in 'rownumber' as you loop
for rownumber in range(15, sheet.nrows):
    print rownumber
    record['SHA'] = keys
    record['Code'] = sheet.row_values(rownumber)[2]
    record['Name'] = sheet.row_values(rownumber)[3]
    record['date1'] = sheet.row_values(rownumber)[4]
    record['date2'] = sheet.row_values(rownumber)[5]
    record['date3'] = sheet.row_values(rownumber)[6]
    record['title'] = title[2]
    print "---", record
    scraperwiki.datastore.save(["Name"], record)
    

